{"filter":false,"title":"three.trackballControls.js","tooltip":"/public/js/three.trackballControls.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":611,"column":72},"action":"insert","lines":["/**"," * @author Eberhard Graether / http://egraether.com/"," * @author Mark Lundin \t/ http://mark-lundin.com"," */","","THREE.TrackballControls = function ( object, domElement ) {","","\tvar _this = this;","\tvar STATE = { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };","","\tthis.object = object;","\tthis.domElement = ( domElement !== undefined ) ? domElement : document;","","\t// API","","\tthis.enabled = true;","","\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };","","\tthis.rotateSpeed = 1.0;","\tthis.zoomSpeed = 1.2;","\tthis.panSpeed = 0.3;","","\tthis.noRotate = false;","\tthis.noZoom = false;","\tthis.noPan = false;","\tthis.noRoll = false;","","\tthis.staticMoving = false;","\tthis.dynamicDampingFactor = 0.2;","","\tthis.minDistance = 0;","\tthis.maxDistance = Infinity;","","\tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];","","\t// internals","","\tthis.target = new THREE.Vector3();","","\tvar EPS = 0.000001;","","\tvar lastPosition = new THREE.Vector3();","","\tvar _state = STATE.NONE,","\t_prevState = STATE.NONE,","","\t_eye = new THREE.Vector3(),","","\t_rotateStart = new THREE.Vector3(),","\t_rotateEnd = new THREE.Vector3(),","","\t_zoomStart = new THREE.Vector2(),","\t_zoomEnd = new THREE.Vector2(),","","\t_touchZoomDistanceStart = 0,","\t_touchZoomDistanceEnd = 0,","","\t_panStart = new THREE.Vector2(),","\t_panEnd = new THREE.Vector2();","","\t// for reset","","\tthis.target0 = this.target.clone();","\tthis.position0 = this.object.position.clone();","\tthis.up0 = this.object.up.clone();","","\t// events","","\tvar changeEvent = { type: 'change' };","\tvar startEvent = { type: 'start'};","\tvar endEvent = { type: 'end'};","","","\t// methods","","\tthis.handleResize = function () {","","\t\tif ( this.domElement === document ) {","","\t\t\tthis.screen.left = 0;","\t\t\tthis.screen.top = 0;","\t\t\tthis.screen.width = window.innerWidth;","\t\t\tthis.screen.height = window.innerHeight;","","\t\t} else {","","\t\t\tvar box = this.domElement.getBoundingClientRect();","\t\t\t// adjustments come from similar code in the jquery offset() function","\t\t\tvar d = this.domElement.ownerDocument.documentElement;","\t\t\tthis.screen.left = box.left + window.pageXOffset - d.clientLeft;","\t\t\tthis.screen.top = box.top + window.pageYOffset - d.clientTop;","\t\t\tthis.screen.width = box.width;","\t\t\tthis.screen.height = box.height;","","\t\t}","","\t};","","\tthis.handleEvent = function ( event ) {","","\t\tif ( typeof this[ event.type ] == 'function' ) {","","\t\t\tthis[ event.type ]( event );","","\t\t}","","\t};","","\tvar getMouseOnScreen = ( function () {","","\t\tvar vector = new THREE.Vector2();","","\t\treturn function ( pageX, pageY ) {","","\t\t\tvector.set(","\t\t\t\t( pageX - _this.screen.left ) / _this.screen.width,","\t\t\t\t( pageY - _this.screen.top ) / _this.screen.height","\t\t\t);","","\t\t\treturn vector;","","\t\t};","","\t}() );","","\tvar getMouseProjectionOnBall = ( function () {","","\t\tvar vector = new THREE.Vector3();","\t\tvar objectUp = new THREE.Vector3();","\t\tvar mouseOnBall = new THREE.Vector3();","","\t\treturn function ( pageX, pageY ) {","","\t\t\tmouseOnBall.set(","\t\t\t\t( pageX - _this.screen.width * 0.5 - _this.screen.left ) / (_this.screen.width*.5),","\t\t\t\t( _this.screen.height * 0.5 + _this.screen.top - pageY ) / (_this.screen.height*.5),","\t\t\t\t0.0","\t\t\t);","","\t\t\tvar length = mouseOnBall.length();","","\t\t\tif ( _this.noRoll ) {","","\t\t\t\tif ( length < Math.SQRT1_2 ) {","","\t\t\t\t\tmouseOnBall.z = Math.sqrt( 1.0 - length*length );","","\t\t\t\t} else {","","\t\t\t\t\tmouseOnBall.z = .5 / length;","\t\t\t\t\t","\t\t\t\t}","","\t\t\t} else if ( length > 1.0 ) {","","\t\t\t\tmouseOnBall.normalize();","","\t\t\t} else {","","\t\t\t\tmouseOnBall.z = Math.sqrt( 1.0 - length * length );","","\t\t\t}","","\t\t\t_eye.copy( _this.object.position ).sub( _this.target );","","\t\t\tvector.copy( _this.object.up ).setLength( mouseOnBall.y )","\t\t\tvector.add( objectUp.copy( _this.object.up ).cross( _eye ).setLength( mouseOnBall.x ) );","\t\t\tvector.add( _eye.setLength( mouseOnBall.z ) );","","\t\t\treturn vector;","","\t\t};","","\t}() );","","\tthis.rotateCamera = (function(){","","\t\tvar axis = new THREE.Vector3(),","\t\t\tquaternion = new THREE.Quaternion();","","","\t\treturn function () {","","\t\t\tvar angle = Math.acos( _rotateStart.dot( _rotateEnd ) / _rotateStart.length() / _rotateEnd.length() );","","\t\t\tif ( angle ) {","","\t\t\t\taxis.crossVectors( _rotateStart, _rotateEnd ).normalize();","","\t\t\t\tangle *= _this.rotateSpeed;","","\t\t\t\tquaternion.setFromAxisAngle( axis, -angle );","","\t\t\t\t_eye.applyQuaternion( quaternion );","\t\t\t\t_this.object.up.applyQuaternion( quaternion );","","\t\t\t\t_rotateEnd.applyQuaternion( quaternion );","","\t\t\t\tif ( _this.staticMoving ) {","","\t\t\t\t\t_rotateStart.copy( _rotateEnd );","","\t\t\t\t} else {","","\t\t\t\t\tquaternion.setFromAxisAngle( axis, angle * ( _this.dynamicDampingFactor - 1.0 ) );","\t\t\t\t\t_rotateStart.applyQuaternion( quaternion );","","\t\t\t\t}","","\t\t\t}","\t\t}","","\t}());","","\tthis.zoomCamera = function () {","","\t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {","","\t\t\tvar factor = _touchZoomDistanceStart / _touchZoomDistanceEnd;","\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;","\t\t\t_eye.multiplyScalar( factor );","","\t\t} else {","","\t\t\tvar factor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * _this.zoomSpeed;","","\t\t\tif ( factor !== 1.0 && factor > 0.0 ) {","","\t\t\t\t_eye.multiplyScalar( factor );","","\t\t\t\tif ( _this.staticMoving ) {","","\t\t\t\t\t_zoomStart.copy( _zoomEnd );","","\t\t\t\t} else {","","\t\t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;","","\t\t\t\t}","","\t\t\t}","","\t\t}","","\t};","","\tthis.panCamera = (function(){","","\t\tvar mouseChange = new THREE.Vector2(),","\t\t\tobjectUp = new THREE.Vector3(),","\t\t\tpan = new THREE.Vector3();","","\t\treturn function () {","","\t\t\tmouseChange.copy( _panEnd ).sub( _panStart );","","\t\t\tif ( mouseChange.lengthSq() ) {","","\t\t\t\tmouseChange.multiplyScalar( _eye.length() * _this.panSpeed );","","\t\t\t\tpan.copy( _eye ).cross( _this.object.up ).setLength( mouseChange.x );","\t\t\t\tpan.add( objectUp.copy( _this.object.up ).setLength( mouseChange.y ) );","","\t\t\t\t_this.object.position.add( pan );","\t\t\t\t_this.target.add( pan );","","\t\t\t\tif ( _this.staticMoving ) {","","\t\t\t\t\t_panStart.copy( _panEnd );","","\t\t\t\t} else {","","\t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( _this.dynamicDampingFactor ) );","","\t\t\t\t}","","\t\t\t}","\t\t}","","\t}());","","\tthis.checkDistances = function () {","","\t\tif ( !_this.noZoom || !_this.noPan ) {","","\t\t\tif ( _eye.lengthSq() > _this.maxDistance * _this.maxDistance ) {","","\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.maxDistance ) );","","\t\t\t}","","\t\t\tif ( _eye.lengthSq() < _this.minDistance * _this.minDistance ) {","","\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.minDistance ) );","","\t\t\t}","","\t\t}","","\t};","","\tthis.update = function () {","","\t\t_eye.subVectors( _this.object.position, _this.target );","","\t\tif ( !_this.noRotate ) {","","\t\t\t_this.rotateCamera();","","\t\t}","","\t\tif ( !_this.noZoom ) {","","\t\t\t_this.zoomCamera();","","\t\t}","","\t\tif ( !_this.noPan ) {","","\t\t\t_this.panCamera();","","\t\t}","","\t\t_this.object.position.addVectors( _this.target, _eye );","","\t\t_this.checkDistances();","","\t\t_this.object.lookAt( _this.target );","","\t\tif ( lastPosition.distanceToSquared( _this.object.position ) > EPS ) {","","\t\t\t_this.dispatchEvent( changeEvent );","","\t\t\tlastPosition.copy( _this.object.position );","","\t\t}","","\t};","","\tthis.reset = function () {","","\t\t_state = STATE.NONE;","\t\t_prevState = STATE.NONE;","","\t\t_this.target.copy( _this.target0 );","\t\t_this.object.position.copy( _this.position0 );","\t\t_this.object.up.copy( _this.up0 );","","\t\t_eye.subVectors( _this.object.position, _this.target );","","\t\t_this.object.lookAt( _this.target );","","\t\t_this.dispatchEvent( changeEvent );","","\t\tlastPosition.copy( _this.object.position );","","\t};","","\t// listeners","","\tfunction keydown( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\twindow.removeEventListener( 'keydown', keydown );","","\t\t_prevState = _state;","","\t\tif ( _state !== STATE.NONE ) {","","\t\t\treturn;","","\t\t} else if ( event.keyCode === _this.keys[ STATE.ROTATE ] && !_this.noRotate ) {","","\t\t\t_state = STATE.ROTATE;","","\t\t} else if ( event.keyCode === _this.keys[ STATE.ZOOM ] && !_this.noZoom ) {","","\t\t\t_state = STATE.ZOOM;","","\t\t} else if ( event.keyCode === _this.keys[ STATE.PAN ] && !_this.noPan ) {","","\t\t\t_state = STATE.PAN;","","\t\t}","","\t}","","\tfunction keyup( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\t_state = _prevState;","","\t\twindow.addEventListener( 'keydown', keydown, false );","","\t}","","\tfunction mousedown( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\tevent.preventDefault();","\t\tevent.stopPropagation();","","\t\tif ( _state === STATE.NONE ) {","","\t\t\t_state = event.button;","","\t\t}","","\t\tif ( _state === STATE.ROTATE && !_this.noRotate ) {","","\t\t\t_rotateStart.copy( getMouseProjectionOnBall( event.pageX, event.pageY ) );","\t\t\t_rotateEnd.copy( _rotateStart );","","\t\t} else if ( _state === STATE.ZOOM && !_this.noZoom ) {","","\t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );","\t\t\t_zoomEnd.copy(_zoomStart);","","\t\t} else if ( _state === STATE.PAN && !_this.noPan ) {","","\t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );","\t\t\t_panEnd.copy(_panStart)","","\t\t}","","\t\tdocument.addEventListener( 'mousemove', mousemove, false );","\t\tdocument.addEventListener( 'mouseup', mouseup, false );","","\t\t_this.dispatchEvent( startEvent );","","\t}","","\tfunction mousemove( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\tevent.preventDefault();","\t\tevent.stopPropagation();","","\t\tif ( _state === STATE.ROTATE && !_this.noRotate ) {","","\t\t\t_rotateEnd.copy( getMouseProjectionOnBall( event.pageX, event.pageY ) );","","\t\t} else if ( _state === STATE.ZOOM && !_this.noZoom ) {","","\t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );","","\t\t} else if ( _state === STATE.PAN && !_this.noPan ) {","","\t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );","","\t\t}","","\t}","","\tfunction mouseup( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\tevent.preventDefault();","\t\tevent.stopPropagation();","","\t\t_state = STATE.NONE;","","\t\tdocument.removeEventListener( 'mousemove', mousemove );","\t\tdocument.removeEventListener( 'mouseup', mouseup );","\t\t_this.dispatchEvent( endEvent );","","\t}","","\tfunction mousewheel( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\tevent.preventDefault();","\t\tevent.stopPropagation();","","\t\tvar delta = 0;","","\t\tif ( event.wheelDelta ) { // WebKit / Opera / Explorer 9","","\t\t\tdelta = event.wheelDelta / 40;","","\t\t} else if ( event.detail ) { // Firefox","","\t\t\tdelta = - event.detail / 3;","","\t\t}","","\t\t_zoomStart.y += delta * 0.01;","\t\t_this.dispatchEvent( startEvent );","\t\t_this.dispatchEvent( endEvent );","","\t}","","\tfunction touchstart( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\tswitch ( event.touches.length ) {","","\t\t\tcase 1:","\t\t\t\t_state = STATE.TOUCH_ROTATE;","\t\t\t\t_rotateStart.copy( getMouseProjectionOnBall( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );","\t\t\t\t_rotateEnd.copy( _rotateStart );","\t\t\t\tbreak;","","\t\t\tcase 2:","\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;","\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;","\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;","\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );","","\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;","\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;","\t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );","\t\t\t\t_panEnd.copy( _panStart );","\t\t\t\tbreak;","","\t\t\tdefault:","\t\t\t\t_state = STATE.NONE;","","\t\t}","\t\t_this.dispatchEvent( startEvent );","","","\t}","","\tfunction touchmove( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\tevent.preventDefault();","\t\tevent.stopPropagation();","","\t\tswitch ( event.touches.length ) {","","\t\t\tcase 1:","\t\t\t\t_rotateEnd.copy( getMouseProjectionOnBall( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );","\t\t\t\tbreak;","","\t\t\tcase 2:","\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;","\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;","\t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );","","\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;","\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;","\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );","\t\t\t\tbreak;","","\t\t\tdefault:","\t\t\t\t_state = STATE.NONE;","","\t\t}","","\t}","","\tfunction touchend( event ) {","","\t\tif ( _this.enabled === false ) return;","","\t\tswitch ( event.touches.length ) {","","\t\t\tcase 1:","\t\t\t\t_rotateEnd.copy( getMouseProjectionOnBall( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );","\t\t\t\t_rotateStart.copy( _rotateEnd );","\t\t\t\tbreak;","","\t\t\tcase 2:","\t\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd = 0;","","\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;","\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;","\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );","\t\t\t\t_panStart.copy( _panEnd );","\t\t\t\tbreak;","","\t\t}","","\t\t_state = STATE.NONE;","\t\t_this.dispatchEvent( endEvent );","","\t}","","\tthis.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );","","\tthis.domElement.addEventListener( 'mousedown', mousedown, false );","","\tthis.domElement.addEventListener( 'mousewheel', mousewheel, false );","\tthis.domElement.addEventListener( 'DOMMouseScroll', mousewheel, false ); // firefox","","\tthis.domElement.addEventListener( 'touchstart', touchstart, false );","\tthis.domElement.addEventListener( 'touchend', touchend, false );","\tthis.domElement.addEventListener( 'touchmove', touchmove, false );","","\twindow.addEventListener( 'keydown', keydown, false );","\twindow.addEventListener( 'keyup', keyup, false );","","\tthis.handleResize();","","\t// force an update at start","\tthis.update();","","};","","THREE.TrackballControls.prototype = Object.create( THREE.EventDispatcher.prototype );","THREE.TrackballControls.prototype.constructor = THREE.TrackballControls;"]}]}]]},"ace":{"folds":[],"scrolltop":837,"scrollleft":0,"selection":{"start":{"row":584,"column":22},"end":{"row":584,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":43,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1426078776394,"hash":"14e79e1e37f610b28498411da130d8e7752d1824"}